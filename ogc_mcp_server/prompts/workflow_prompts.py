"""工作流提示词模块

提供引导AI使用现有工具进行复杂地理数据分析的提示词模板
"""

import logging
from typing import Dict, Any, List
from fastmcp import FastMCP
from pydantic import Field
from typing_extensions import Annotated

logger = logging.getLogger(__name__)

# 创建工作流提示词子服务器
workflow_prompts_server = FastMCP(name="工作流提示词服务")


@workflow_prompts_server.prompt
def spatial_analysis_workflow(
    analysis_type: Annotated[str, Field(description="分析类型，如：人口分析、土地利用分析、环境分析等")],
    region: Annotated[str, Field(description="分析区域，如：北京市、上海市等")],
    data_requirements: Annotated[str, Field(description="数据需求描述，如：需要底图、人口数据、行政边界等")] = "底图和相关专题数据"
) -> str:
    """空间分析工作流提示词模板
    
    引导AI使用现有的WMS和WFS工具进行复杂的空间分析，而不是依赖专门的分析工具。
    """
    
    return f"""# 空间分析工作流：{analysis_type}

## 分析目标
对 **{region}** 进行 **{analysis_type}**，需要获取{data_requirements}并进行叠加可视化分析。

## 工作流程
请按照以下步骤使用现有工具完成分析：

### 第一步：数据发现和准备
1. **使用 `mgmt_list_layer_resources` 工具**：
   - 查看当前可用的图层资源
   - 识别与{region}和{analysis_type}相关的图层

2. **使用 `mgmt_search_layers` 工具**（如果需要）：
   - 搜索包含关键词的图层（如：{region}、人口、土地、环境等）
   - 筛选出WMS底图图层和WFS数据图层

### 第二步：获取底图数据
1. **使用 `wms_get_wms_map` 工具**：
   - 选择合适的WMS底图图层
   - 设置适当的边界框（bbox）覆盖{region}
   - 获取底图的预览和配置信息

2. **使用 `wms_create_wms_visualization` 工具**（可选）：
   - 创建底图的单独可视化进行预览
   - 确认底图质量和覆盖范围

### 第三步：获取专题数据
1. **使用 `wfs_get_wfs_geojson_data` 工具**：
   - 获取与{analysis_type}相关的WFS图层数据
   - 应用空间过滤（bbox）限制在{region}范围内
   - 应用属性过滤（cql_filter）筛选相关要素

2. **分析数据质量**：
   - 检查返回的要素数量和属性信息
   - 确认数据的完整性和相关性

### 第四步：组合可视化
1. **使用 `create_composite_visualization` 工具**：
   - 将底图（WMS）和专题数据（GeoJSON）组合
   - 配置图层样式和透明度
   - 设置合适的地图中心和缩放级别
   - 生成交互式叠加地图

### 第五步：结果分析和解读
1. **访问生成的可视化页面**：
   - 在浏览器中查看叠加结果
   - 使用交互功能探索数据

2. **提供分析总结**：
   - 描述发现的空间模式
   - 统计相关数据指标
   - 给出分析结论和建议

## 关键原则
- **组合使用现有工具**：不要寻找专门的分析工具，而是灵活组合WMS、WFS和可视化工具
- **数据驱动**：基于实际可用的图层数据进行分析
- **渐进式工作流**：先获取数据，再进行可视化，最后分析结果
- **交互式探索**：利用Web可视化的交互功能深入分析

## 预期输出
- 包含底图和专题数据的叠加可视化
- 数据统计和空间分析结果
- 可访问的交互式地图链接
- 分析结论和建议

现在请开始执行这个工作流程！"""


@workflow_prompts_server.prompt
def layer_discovery_workflow(
    keywords: Annotated[str, Field(description="搜索关键词，如：人口、交通、环境等")],
    region: Annotated[str, Field(description="目标区域")] = "任意区域",
    service_type: Annotated[str, Field(description="服务类型偏好：WMS、WFS或both")] = "both"
) -> str:
    """图层发现工作流提示词模板
    
    引导AI系统性地发现和评估可用的地理数据图层。
    """
    
    return f"""# 图层发现工作流：{keywords}

## 发现目标
系统性地发现与 **{keywords}** 相关的地理数据图层，用于{region}的分析。

## 发现流程

### 第一步：全面图层清单
1. **使用 `mgmt_list_layer_resources` 工具**：
   - 获取完整的图层资源列表
   - 了解数据库中的总体数据情况
   - 识别可用的服务类型和数据源

### 第二步：关键词搜索
1. **使用 `mgmt_search_layers` 工具**：
   - 搜索包含"{keywords}"的图层
   - 尝试相关的英文关键词搜索
   - 搜索相关的同义词和扩展词汇

### 第三步：图层详细评估
对每个相关图层进行详细评估：

1. **WMS图层评估**：
   - 使用 `wms_get_wms_map` 获取预览
   - 检查图层的空间覆盖范围
   - 评估图像质量和分辨率

2. **WFS图层评估**：
   - 使用 `wfs_get_wfs_geojson_data` 获取样本数据
   - 分析要素的属性结构
   - 评估数据的完整性和质量

### 第四步：数据适用性分析
1. **空间适用性**：
   - 确认图层覆盖{region}
   - 检查坐标系统兼容性
   - 评估空间分辨率是否满足需求

2. **主题适用性**：
   - 确认图层内容与{keywords}的相关性
   - 分析属性字段的有用性
   - 评估数据的时效性

### 第五步：推荐数据组合
基于发现结果，推荐最佳的数据组合：

1. **底图推荐**：
   - 选择最适合的WMS底图
   - 考虑分析目的和视觉效果

2. **专题数据推荐**：
   - 选择最相关的WFS数据图层
   - 考虑数据质量和完整性

3. **组合建议**：
   - 提供具体的图层组合方案
   - 说明每个图层的作用和价值

## 服务类型偏好
当前偏好：**{service_type}**
- WMS：适合作为底图和背景参考
- WFS：适合进行数据分析和属性查询
- both：获取完整的数据视图

## 输出要求
- 相关图层的完整清单
- 每个图层的详细评估报告
- 数据质量和适用性分析
- 推荐的数据使用方案

现在请开始图层发现流程！"""


@workflow_prompts_server.prompt
def data_integration_workflow(
    base_layers: Annotated[str, Field(description="底图图层描述")],
    overlay_layers: Annotated[str, Field(description="叠加图层描述")],
    analysis_purpose: Annotated[str, Field(description="分析目的")] = "综合分析"
) -> str:
    """数据集成工作流提示词模板
    
    引导AI将多个数据源集成为统一的可视化分析结果。
    """
    
    return f"""# 数据集成工作流：{analysis_purpose}

## 集成目标
将 **{base_layers}** 作为底图，**{overlay_layers}** 作为叠加数据，创建统一的可视化分析。

## 集成流程

### 第一步：数据准备和标准化
1. **底图数据准备**：
   - 使用相应的WMS工具获取底图数据
   - 确保底图覆盖完整的分析区域
   - 设置适当的分辨率和样式

2. **叠加数据准备**：
   - 使用WFS工具获取矢量数据
   - 应用必要的空间和属性过滤
   - 确保数据格式的一致性

### 第二步：空间配准和坐标系统
1. **坐标系统检查**：
   - 确认所有图层使用兼容的坐标系统
   - 必要时进行坐标转换

2. **空间范围对齐**：
   - 计算所有图层的公共边界
   - 设置统一的地图范围

### 第三步：样式设计和视觉层次
1. **底图样式**：
   - 设置适当的透明度（通常较低，作为背景）
   - 选择不干扰叠加数据的颜色方案

2. **叠加数据样式**：
   - 根据数据类型设计符号系统
   - 设置合适的颜色、线宽、透明度
   - 确保视觉层次清晰

### 第四步：创建集成可视化
1. **使用 `create_composite_visualization` 工具**：
   - 按照正确的图层顺序组织数据
   - 配置每个图层的样式参数
   - 设置交互功能和弹窗信息

2. **地图配置优化**：
   - 设置合适的初始视图范围
   - 配置图层控制器
   - 添加必要的地图工具

### 第五步：质量检查和优化
1. **视觉效果检查**：
   - 确认图层叠加效果符合预期
   - 检查颜色搭配和视觉层次
   - 验证交互功能正常

2. **性能优化**：
   - 调整数据量和显示精度
   - 优化加载速度

### 第六步：分析和解读
1. **空间关系分析**：
   - 识别底图和叠加数据的空间关系
   - 发现空间模式和趋势

2. **综合分析**：
   - 结合多个数据源进行综合分析
   - 提供基于集成数据的洞察

## 分析目的
**{analysis_purpose}**

根据这个目的，请特别关注：
- 数据之间的相关性分析
- 空间模式的识别
- 异常值和特殊区域的发现
- 趋势和变化的检测

## 预期成果
- 多图层集成的交互式地图
- 数据集成质量报告
- 空间关系分析结果
- 基于集成数据的分析结论

现在请开始数据集成工作流程！"""


@workflow_prompts_server.prompt
def problem_solving_workflow(
    problem_description: Annotated[str, Field(description="问题描述")],
    available_data: Annotated[str, Field(description="可用数据描述")] = "需要探索发现",
    constraints: Annotated[str, Field(description="约束条件")] = "无特殊约束"
) -> str:
    """问题解决工作流提示词模板
    
    引导AI使用现有工具解决复杂的地理空间问题。
    """
    
    return f"""# 地理空间问题解决工作流

## 问题定义
**问题描述**：{problem_description}

**可用数据**：{available_data}

**约束条件**：{constraints}

## 解决方案框架

### 第一阶段：问题分析和分解
1. **问题分解**：
   - 将复杂问题分解为可操作的子问题
   - 识别每个子问题需要的数据类型
   - 确定分析的空间和时间范围

2. **数据需求分析**：
   - 列出解决问题所需的所有数据类型
   - 区分必需数据和辅助数据
   - 考虑数据的精度和时效性要求

### 第二阶段：数据获取和准备
1. **数据发现**：
   - 使用图层发现工具系统性搜索相关数据
   - 评估数据的可用性和质量
   - 识别数据缺口和替代方案

2. **数据获取**：
   - 使用WMS工具获取底图和参考数据
   - 使用WFS工具获取分析所需的矢量数据
   - 应用适当的过滤条件优化数据

### 第三阶段：分析方法设计
1. **分析策略**：
   - 基于可用工具设计分析方法
   - 确定数据处理和分析的步骤
   - 考虑多种分析角度和方法

2. **可视化策略**：
   - 设计有效的可视化方案
   - 选择合适的符号系统和颜色方案
   - 规划交互功能和用户体验

### 第四阶段：实施和执行
1. **按步骤执行**：
   - 逐步获取和处理数据
   - 创建中间结果进行验证
   - 及时调整方法和参数

2. **质量控制**：
   - 验证每个步骤的结果
   - 检查数据的一致性和准确性
   - 确保分析逻辑的正确性

### 第五阶段：结果综合和解释
1. **结果集成**：
   - 使用复合可视化工具整合所有分析结果
   - 创建综合性的分析视图
   - 确保结果的可理解性

2. **结果解释**：
   - 基于可视化结果回答原始问题
   - 提供清晰的结论和建议
   - 识别不确定性和局限性

## 工具使用策略

### 核心工具组合
- **mgmt_*** 工具：用于数据发现和管理
- **wms_*** 工具：用于获取底图和参考数据
- **wfs_*** 工具：用于获取分析数据
- **create_composite_visualization**：用于结果展示

### 工作流原则
1. **渐进式方法**：从简单到复杂，逐步构建解决方案
2. **数据驱动**：基于实际可用数据调整分析方法
3. **迭代优化**：根据中间结果调整和改进方法
4. **结果验证**：通过多种方式验证分析结果

## 约束条件处理
**当前约束**：{constraints}

请在整个工作流程中考虑这些约束条件，并在必要时调整方法和期望。

## 成功标准
- 清晰回答原始问题
- 提供可信的分析结果
- 创建有效的可视化展示
- 给出可操作的建议

现在请开始问题解决工作流程！"""